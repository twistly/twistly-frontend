extends ../layout

block content
    .row.mt
        .col-lg-12
            if(stats.length)
                .col-lg-5.col-md-6.center-block(style='float: none; color: white;')#statTable
                    .panel.darkblue-panel(style='text-align: left;')
                        .panel-body
                            .col-lg-6.col-md-6.col-sm-6.col-xs-6
                            .col-lg-6.col-md-6.col-sm-6.col-xs-6
                .col-lg-6
                    .panel.darkblue-panel
                        .panel-body
                            div
                                canvas#followersDailyLineChart.col-lg-6
                .col-lg-6
                    .panel.darkblue-panel
                        .panel-body
                            div
                                canvas#followersHourlyLineChart.col-lg-6
                .col-lg-6
                    .panel.darkblue-panel
                        .panel-body
                            div
                                canvas#followersDailyBarChart.col-lg-6
                .col-lg-6
                    .panel.darkblue-panel
                        .panel-body
                            div
                                canvas#followersHourlyBarChart.col-lg-6
            else
                .panel.panel-default
                    .panel-body
                        h5 We haven't started collecting stats for this blog yet, please check back in about an hour.
block scripts
    if(stats.length)
        script.
            var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];
            var hours = ['1 AM', '2 AM', '3 AM', '4 AM', '5 AM', '6 AM', '7 AM', '8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'];
            var stats = !{JSON.stringify(stats)};
            var sampleChartData = {
                labels: [],
                datasets: [{
                    label: 'My First dataset',
                    fillColor: 'rgba(220,220,220,0.2)',
                    strokeColor: 'rgba(220,220,220,1)',
                    pointColor: 'rgba(220,220,220,1)',
                    pointStrokeColor: '#fff',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: []
                }]
            };
            var dailyLineChartData = sampleChartData,
                dailyBarChartData = sampleChartData,
                hourlyLineChartData = sampleChartData,
                hourlyBarChartData = sampleChartData;
            Array.prototype.clean = function(deleteValue) {
                for (var i = 0; i < this.length; i++) {
                    if (this[i] == deleteValue) {         
                        this.splice(i, 1);
                        i--;
                    }
                }
                return this;
            };
        script.
            var fakeData = {};
            var labels = [];
            var fakeStats = stats.slice();
            fakeStats.reverse().forEach(function(stat){
                var date = new Date(new Date(stat.date).setHours(0,0,0,0)).getTime();
                fakeData[date] = stat.followerCount;
                if(labels.indexOf(days[new Date(stat.date).getDay()]) === -1){
                    labels.push(days[new Date(stat.date).getDay()]);
                }
            });
            fakeData = $.map(fakeData, function(value, index) {
                return [value];
            });
            
            fakeData = fakeData.slice(Math.max(fakeData.length - 7, 1));
            dailyLineChartData.datasets[0].data = fakeData;
            
            labels = labels.reverse();
            labels[6] = 'Today';
            dailyLineChartData.labels = labels;
            
            var dailyLineChart = $('#followersDailyLineChart').get(0).getContext('2d');
            new Chart(dailyLineChart).Line(dailyLineChartData, {responsive: true, scaleFontColor: '#ffffff' });
        script.
            var fakeData = [];
            var count = 0;
            stats.forEach(function(stat){
                var hour = new Date(stat.date).getHours();
                if(!fakeData[hour]){
                    fakeData[hour] = stat.followerCount;
                    count++;
                }
                if(count == 24) return;
            });
            
            hourlyLineChartData.labels = hours.slice(new Date().getHours(), hours.length).concat(hours.slice(0, new Date().getHours())),
            hourlyLineChartData.labels[23] = 'NOW',
            hourlyLineChartData.datasets[0].data = fakeData.clean(),
            hourlyLineChartData.datasets[0].data = fakeData.slice(new Date().getHours()+1, fakeData.length).concat(fakeData.slice(0, new Date().getHours()+1));
            
            var hourlyLineChart = $('#followersHourlyLineChart').get(0).getContext('2d');
            new Chart(hourlyLineChart).Line(hourlyLineChartData, {responsive: true, scaleFontColor: '#ffffff' });
        script.
            var fakeData = {};
            var labels = [];
            stats.forEach(function(stat){
                var date = new Date(new Date(stat.date).setHours(0,0,0,0)).getTime();
                fakeData[date] = stat.followerCount;
                if(labels.indexOf(days[new Date(stat.date).getDay()]) === -1){
                    labels.push(days[new Date(stat.date).getDay()]);
                }
            });
            fakeData = $.map(fakeData, function(value, index) {
                return [value];
            });
            fakeData = fakeData.reverse();
            var diff = [];
            var firstDiff = 0;
            fakeData.forEach(function(data){
                var i = fakeData.indexOf(data);
                var tempDiff = data - fakeData[i-1];
                if(isNaN(tempDiff)){
                    diff.push(0);
                } else if(i == 0){
                    diff.push(data - firstDiff);
                } else {
                    diff.push(data - fakeData[i-1]);
                }
            });
            
            dailyBarChartData.datasets[0].data = diff.slice(Math.max(diff.length - 7, 1));
            
            labels = labels.reverse();
            labels[6] = 'Today';
            dailyLineChartData.labels = labels;
            
            var dailyBarChart = $('#followersDailyBarChart').get(0).getContext('2d');
            new Chart(dailyBarChart).Bar(dailyBarChartData, {responsive: true, scaleFontColor: '#ffffff' });
        script.
            //- 
            //- TODO - This whole section needs to be rewritten to the new global style
            //- 
            var fakeData = [];
            var labels = ['1 AM', '2 AM', '3 AM', '4 AM', '5 AM', '6 AM', '7 AM', '8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'];
            var count = 0;
            stats.forEach(function(stat){
                var hour = new Date(stat.date).getHours();
                if(!fakeData[hour]){
                    fakeData[hour] = stat.followerCount;
                    count++;
                }
                if(count == 24) return;
            });
            
            labels = labels.slice(new Date().getHours(), labels.length).concat(labels.slice(0, new Date().getHours()));
            labels[23] = 'NOW';
            fakeData = fakeData.clean();
            fakeData = fakeData.slice(new Date().getHours()+1, fakeData.length).concat(fakeData.slice(0, new Date().getHours()+1));
                
            var firstDiff = 0;
            var finished = _.after(stats.length, done);
            stats.forEach(function(stat){
                var statDate = new Date(stat.date),
                    todaysDate = new Date();
                if(statDate.getDate() == (todaysDate.getDate()-1)){
                    labels[0].indexOf('AM') > 0 ? num = -1 : num = 11;
                    if(statDate.getHours() == (parseInt(labels[0].replace(' PM', ''))+num)){
                        if(!firstDiff){
                            firstDiff = stat.followerCount;
                        }
                    }
                }
                finished();
            });
            
            function done(){
                var diff = [];
                fakeData.forEach(function(data){
                    var i = fakeData.indexOf(data);
                    if(i == 0){
                        diff.push(data - firstDiff);
                    } else {
                        var tempDiff = data - fakeData[i-1];
                        if(tempDiff > 0) {
                            diff.push(data - fakeData[i-1]);
                        } else {
                            diff.push(0);
                        }
                    }
                });
                var data = {
                    labels: labels,
                    datasets: [{
                        label: 'My First dataset',
                        fillColor: 'rgba(220,220,220,0.2)',
                        strokeColor: 'rgba(220,220,220,1)',
                        pointColor: 'rgba(220,220,220,1)',
                        pointStrokeColor: '#fff',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: diff
                    }]
                };
                var hourlyBarChart = $('#followersHourlyBarChart').get(0).getContext('2d');
                var hourlyBarChart = new Chart(hourlyBarChart).Bar(data, {responsive: true,scaleFontColor: '#ffffff' });
            };
        script.
            //- 
            //- This is for the top stats section
            //- 
            var statTable = !{JSON.stringify(statTable)};
            var lang = navigator.language || navigator.userLanguage;
            statTable.html[0] = '1 week forecast: ' + Number(statTable.forecast.week).toLocaleString(lang) + '<br>1 month forecast: ' + Number(statTable.forecast.month).toLocaleString(lang) + '<br>1 year forecast: '  + Number(statTable.forecast.year).toLocaleString(lang);
            statTable.html[1] = 'Total followers: ' + Number(statTable.currentFollowers).toLocaleString(lang) + '<br>Gained today: ' + Number(dailyBarChartData.datasets[0].data[dailyBarChartData.datasets[0].data.length-1]).toLocaleString(lang) + '<br>Last updated: ' + statTable.lastUpdated;
            $('#statTable').find('.panel-body div').eq(0).html(statTable.html[0]);
            $('#statTable').find('.panel-body div').eq(1).html(statTable.html[1]);
